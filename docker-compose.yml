version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ADDR: 0.0.0.0:8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: orders
      KAFKA_ADDR: kafka:29092
      KAFKA_TOPIC: orders
      KAFKA_GROUP: orders-group
      CACHE_TTL_SEC: 10800
    ports:
      - "8080:8080"
    networks:
      - docker_net
    depends_on:
      - postgres
      - kafka

  postgres:
    image: postgres:latest
    container_name: my_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orders
    ports:
      - "5432:5432"
    networks:
      - docker_net
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - docker_net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    networks:
      - docker_net

networks:
  docker_net:
    name: docker_net
    driver: bridge

volumes:
  postgres_data:
  